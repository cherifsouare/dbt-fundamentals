/****************************************************************************************
 Create sql code to create the user table
******************************************************************************************/
-- step 1: create the table
create table analytics-exports-sandbox.dbt_msouare.user

(
    user_id int64 not null options (
        description = '''the policyholder's unique user id.'''
    ),
    given_names string options (
        description = '''the policyholder's given names.'''
    ),
    last_names string options (
        description = '''the policyholder's last names.'''
    ),
    address_1 string options (
        description = '''the first line of the policyholder's address.'''
    ),
    address_2 string options (
        description = '''the second line of the policyholder's address.'''
    ),
    city string options (description = '''the policyholder's city.'''),
    postcode string options (description = '''the policyholder's postcode.'''),
    country string options (description = '''the policyholder's country.''')

)
options (
    description = 'user information data'
);

-- step 2: declare the primary key of the table
alter table analytics-exports-sandbox.dbt_msouare.user
add primary key(user_id) not enforced;


/****************************************************************************************
 Create sql code to create the product table
******************************************************************************************/
-- step 1: create the table
create table analytics-exports-sandbox.dbt_msouare.product

(
    product_id int64 not null options (
        description = 'a unique product identifier.'
    ),
    product_code string options (
        description
        = '''a code representing the product's configuration, made up of four elements separated by underscores: country_vertical_type_vehicle.'''
    ),
    is_billed_upfront boolean options (
        description
        = 'whether or not a policy on this product must be paid in full before it starts.'
    )

)
options (
    description = 'product information data'
);

-- step 2: declare the primary key of the table

alter table analytics-exports-sandbox.dbt_msouare.product
add primary key(product_id) not enforced;


/****************************************************************************************
 Create sql code to create the transaction_type table
******************************************************************************************/

-- step 1: create the table

create table analytics-exports-sandbox.dbt_msouare.transaction_type

(
    transaction_type_id int64 not null options (
        description = 'a unique identifier for a transaction type.'
    ),
    transaction_type_description string options (
        description
        = 'one of: new_policy, mid_term_adjustment, renewal, correction, cancellation'
    ),
    is_adjustment bool options (
        description
        = 'whether or not this type of transaction causes an adjustment to the policy. if false, a new inception_policy_id is generated instead.'
    )

)
options (
    description = 'transaction type information data'
);

-- step 2: declare the primary key of the table

alter table analytics-exports-sandbox.dbt_msouare.transaction_type
add primary key(transaction_type_id) not enforced;


/****************************************************************************************
 Create sql code to create the transaction_policy table
******************************************************************************************/

create table analytics-exports-sandbox.dbt_msouare.policy_transaction (

  user_id int64 not null options (description = '''the policyholder's unique user id.'''),
  inception_policy_id int64 options (description = 'a unique id for the policy'), 
  adjustement_policy_id int64 options (description = 'a unique id for the policy'),
  product_id int64 options (description = 'the id of the product the policy'),
  change_number int64 options (description = 'increments each time an adjustment to the policy takes place.'),
  transaction_type_id int64 options (description = 'the type of transaction this record represents.'),
  effective_start_date date options (description = 'the policy creation date, unless the transaction type is mid_term_adjustment.'),
  effective_end_date date options (description = 'the original policy end date, unless the transaction type is cancellation.'),
  transaction_gwp float64 options (description = 'the revenue - gross written premium - generated by this transaction.'),
  policy_total_gwp float64 options (description = 'the lifetime gross written premium for the policy up to the current date (if still active) or the effective_end_date.'),
  transaction_breakdown json options (description = 'a json object containing a financial breakdown of the transaction.')
)
options (
    description = 'Policy transaction information data'
);
-- declaring fk to define relationship with relevant tables

foreign key (user_id) references `analytics-exports-sandbox.dbt_msouare.user`(user_id) not enforced,
foreign key (product_id) references `analytics-exports-sandbox.dbt_msouare.product`(product_id) not enforced,
foreign key (transaction_type_id) references `analytics-exports-sandbox.dbt_msouare.transaction_type`(transaction_type_id) not enforced
  